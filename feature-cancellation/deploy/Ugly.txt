<!DOCTYPE html>
<html>
<head>
    <title>Feature Cancellation App</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Sun Apr 22 2018 11:15:04 GMT-0700 (PDT) -->
    
    <script type="text/javascript">
        var APP_BUILD_DATE = "Sun Apr 22 2018 11:15:04 GMT-0700 (PDT)";
        var STORY    = "Us1435";
        var BUILDER  = "marjo60";
        var CHECKSUM = 41186692889;
    </script>
    
    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns) 
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->
    
    
    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,informationalConfig:null,items:[{xtype:"container",itemId:"information"}],initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/var BUILDER  = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred"),c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){if(text=a.responseText,CHECKSUM){var d=c._generateChecksum(text);if(CHECKSUM!==d)return void b.resolve(!1)}b.resolve(!0)}}),b.promise},_addToContainer:function(a){var b=Ext.apply({xtype:"container",height:200,overflowY:!0},this.informationalConfig);a.add(b)},afterRender:function(){var a=Rally.getApp();if(!Ext.isEmpty(this.informationalConfig)){var b=this.down("#information");this._addToContainer(b)}a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",dock:"bottom",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){if(this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml,doc:"top"}),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"This app was created by the CA AC Technical Services Team."}),APP_BUILD_DATE){var a=Ext.String.format("Built on: {0} <br/>Built by: {1}",APP_BUILD_DATE,BUILDER);STORY&&(a=a+"<br/>Source story: "+STORY),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:a})}}}),Ext.define("Rally.technicalservices.Logger",{constructor:function(a){Ext.apply(this,a)},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),window.console&&console.log.apply(console,c)}}),Ext.define("Rally.technicalservices.Toolbox",{singleton:!0,fetchPortfolioItemTypes:function(){var a=Ext.create("Deft.Deferred"),b=Ext.create("Rally.data.wsapi.Store",{model:"TypeDefinition",fetch:["TypePath","Ordinal","Name"],filters:[{property:"TypePath",operator:"contains",value:"PortfolioItem/"}],sorters:[{property:"Ordinal",direction:"ASC"}]});return b.load({callback:function(b,c,d){if(d){var e=new Array(b.length);_.each(b,function(a){var b=Number(a.get("Ordinal"));e[b]=a.get("TypePath")}),a.resolve(e)}else{var f="";c&&c.error&&c.error.errors&&(f=c.error.errors.join(",")),a.reject("Error loading Portfolio Item Types:  "+f)}}}),a.promise},fetchPortfolioItemStateRefs:function(a){var b=Ext.create("Deft.Deferred"),c=Ext.create("Rally.data.wsapi.Store",{model:"State",fetch:["TypePath","TypeDef","Name"],filters:[{property:"Name",value:a}]});return c.load({callback:function(a,c,d){if(d){var e={};Ext.Array.each(a,function(a){var b=a.get("TypeDef")&&a.get("TypeDef").TypePath.toLowerCase();e[b]||(e[b]=a.get("_ref"))}),b.resolve(e)}else{var f="";c&&c.error&&c.error.errors&&(f=c.error.errors.join(",")),b.reject("Error loading Portfolio Item States:  "+f)}}}),b.promise},fetchReleases:function(a){var b=Ext.create("Deft.Deferred"),c=Ext.create("Rally.data.wsapi.Store",{model:"Release",fetch:["Project","Name"],filters:[{property:"Name",value:a}]});return c.load({callback:function(a,c,d){if(d){var e={};Ext.Array.each(a,function(a){var b=a.get("Project")&&a.get("Project")._ref;e[b]||(e[b]=a.get("_ref"))}),b.resolve(e)}else{var f="";c&&c.error&&c.error.errors&&(f=c.error.errors.join(",")),b.reject("Error loading Releases:  "+f)}}}),b.promise},fetchCompletedScheduleStates:function(){var a=Ext.create("Deft.Deferred");return Rally.data.ModelFactory.getModel({type:"HierarchicalRequirement",success:function(b){var c=b.getField("ScheduleState");c.getAllowedValueStore().load({callback:function(b,c,d){if(d){for(var e=[],f=0;f<b.length;f++)(e.length>0||"Completed"===b[f].get("StringValue"))&&e.push(b[f].get("StringValue"));a.resolve(e)}else a.reject("Error loading ScheduleState values for User Story:  "+c.error.errors.join(","))},scope:this})},failure:function(){var b="Could not load schedule states";a.reject(b)}}),a.promise}}),Ext.define("Rally.technicalservices.ArtifactTree",{logger:new Rally.technicalservices.Logger,mixins:{observable:"Ext.util.Observable"},rootArtifact:void 0,modelHash:null,portfolioItemTypes:void 0,childTypesBlacklist:void 0,parentChildTypeMap:null,blacklistFields:null,canceledPrefix:"[CANCELLED] ",canceledScheduleState:"Defined",completedStates:[],canceledPortfolioStates:{},canceledReleaseHash:{},stoppedByError:!1,constructor:function(a){this.blacklistFields=["Workspace","Attachments","Tags","Discussion","Milestones"],this.childTypesBlacklist=a.childTypesBlacklist||["testcase","defectsuite","defect"],this.parentChildTypeMap=this._setupParentChildMap(a.portfolioItemTypes),this.modelHash={},this.canceledPortfolioStates=a.portfolioItemCanceledStates,this.canceledReleaseHash=a.canceledReleaseHash,this.completedStates=a.completedStates,this.canceledScheduleState=a.canceledScheduleState,this.canceledPrefix=a.canceledPrefix,this.mixins.observable.constructor.call(this,a)},load:function(a,b){this.logger.log("load:",a,b),this.totalRecords=1,this.tree={},this.stoppedByError=!1,this.rootArtifact=a,this._loadModel(a)},cancelItems:function(){this.logger.log("..cancelItems..",this.rootArtifact&&this.rootArtifact.get("FormattedID"),this.canceledPrefix);var a=this;this.totalArtifacts=_.keys(this.tree).length||0,this.completedArtifacts=0,this.fireEvent("statusupdate",0,this.totalArtifacts),a._updateArtifacts().then({success:function(a){this.logger.log("cancelItems. _updateArtifacts success",a),this.fireEvent("completed",a)},failure:function(a){this.logger.log("cancelItems. _updateArtifacts failure",a),this.fireEvent("error","Error updating items")},scope:this})},_updateArtifacts:function(){var a=this.canceledPrefix,b=this.canceledScheduleState,c=this.completedStates,d=this.canceledReleaseHash,e=this.canceledPortfolioStates,f=_.pluck(this.tree,"record");this.logger.log("_updateArtifacts",this.tree,c);var g=Ext.create("Rally.data.wsapi.batch.Store",{data:f});return Ext.Array.each(f,function(f){var g=f.get("_type").toLowerCase(),h=[];if("hierarchicalrequirement"===g&&!Ext.Array.contains(c,f.get("ScheduleState"))){var i=a+f.get("Name");f.set("Name",i),h.push("Name"),0===f.get("DirectChildrenCount")&&(canceledRelease=d[f.get("Project")._ref],f.set("ScheduleState",b),f.set("Release",canceledRelease),f.set("PlanEstimate",0),Ext.Array.push(h,["ScheduleState","Release","PlanEstimate"]))}if("task"===g.toLowerCase()&&(f.set("ToDo",0),h.push("ToDo")),/portfolioitem/.test(g)){var j=f.get("State")&&f.get("State")._ref;Ext.Array.contains(c,j)||(f.set("State",e[g]),h.push("State"))}f.set("__changedFields",h)},this),g.sync()},_loadModel:function(a){this._fetchModel(a.get("_type")).then({success:function(b){this.logger.log("_loadModel success"),this._loadArtifact(b,a)},failure:function(b){this.tree[a.get("ObjectID")].error=b,this._checkForDoneness(b)},scope:this})},_loadArtifact:function(a,b){if(this.logger.log("_loadArtifact",b),!this.stoppedByError){var c=b.get("ObjectID");a.load(c,{fetch:!0,scope:this,callback:function(a,d){if(d.wasSuccessful())this.logger.log("_loadArtifact success",c,a),this.tree[c]=this.getTreeNode(a),this._loadArtifactChildren(a);else{this.logger.log("_loadArtifact failure",c,d);var e=Ext.String.format("Failed to load {0}/{1} with error: {2} ",b.get("_type"),b.get("ObjectID"),d.error.errors.join(","));this.tree[c].error=e,this._checkForDoneness(e)}}})}},getTreeNode:function(a){return{record:a,error:null,childCount:{}}},_loadArtifactChildren:function(a){if(!this.stoppedByError){var b=this.parentChildTypeMap[a.get("_type").toLowerCase()];b=_.filter(b,function(a){return Ext.Array.contains(this.childTypesBlacklist,a.typePath)?void 0:!0},this),this.logger.log("_loadArtifactChildren",b,this.parentChildTypeMap,a.get("_type").toLowerCase()),_.each(b,function(b){this.logger.log("_loadArtifactChildren child",b,a.get(b.collectionName).Count),a.get(b.collectionName).Count>0&&(this.totalRecords=this.totalRecords+a.get(b.collectionName).Count,this._loadCollection(a,b.collectionName,!0))},this),0===this.collectionsLoading&&this._checkForDoneness()}},_checkForDoneness:function(a){return this.logger.log("_checkForDoneness",this.collectionsLoading),this.logger.log("_checkForDoneness",this.tree,this.totalRecords,_.keys(this.tree).length,a),a?(this.stoppedByError=!0,void this.fireEvent("error",a)):void(this.tree&&_.keys(this.tree).length===this.totalRecords&&0===this.collectionsLoading&&(this.logger.log("_checkForDoneness...TREE LOADED!"),this.fireEvent("treeloaded",this)))},_loadCollection:function(a,b,c,d){var e=Ext.create("Deft.Deferred"),f=a.get("ObjectID");this.collectionsLoading||(this.collectionsLoading=0),this.collectionsLoading++,this.tree[f][b]=[];var g=[];return Ext.Array.contains(["Tags","Attachments"],b)||(g=[{property:"Project.State",value:"Open"}]),a.getCollection(b).load({fetch:["ObjectID"],filters:g,callback:function(g,h,i){if(this.logger.log("_loadCollection callback",b,g,i),i)_.each(g,function(a){var e=a.get("ObjectID");d&&(e=a.get("_ref")),this.tree[f][b].push(e),c&&this._loadModel(a)},this),this.collectionsLoading--,this._checkForDoneness(j),e.resolve();else{var j=Ext.String.format("Failed to load collecton for {0}/{1} with error: {2} ",a.get("_type"),a.get("ObjectID"),h.error.errors.join(","));this.tree[f].error=j,this.collectionsLoading--,this._checkForDoneness(j),e.reject(j)}},scope:this}),e},_fetchModel:function(a){var b=Ext.create("Deft.Deferred");return this.modelHash[a]?b.resolve(this.modelHash[a]):Rally.data.ModelFactory.getModel({type:a,success:function(c){this.modelHash[a]=c,b.resolve(c)},failure:function(){var c="Failed to load model: "+a;this._checkForDoneness(c),b.reject(c)},scope:this}),b},_setupParentChildMap:function(a){var b={hierarchicalrequirement:[{typePath:"defect",collectionName:"Defects",parentField:"Requirement"},{typePath:"task",collectionName:"Tasks",parentField:"WorkProduct"},{typePath:"testcase",collectionName:"TestCases",parentField:"WorkProduct"},{typePath:"hierarchicalrequirement",collectionName:"Children",parentField:"Parent"}],defect:[{typePath:"task",collectionName:"Tasks",parentField:"WorkProduct"},{typePath:"testcase",collectionName:"TestCases",parentField:"WorkProduct"}],defectsuite:[{typePath:"defect",collectionName:"Defects",parentField:"DefectSuites"},{typePath:"task",collectionName:"Tasks",parentField:"WorkProduct"},{typePath:"testcase",collectionName:"TestCases",parentField:"WorkProduct"}],testset:[{typePath:"task",collectionName:"Tasks",parentField:"WorkProduct"},{typePath:"testcase",collectionName:"TestCases",parentField:"TestSets"}]};if(a&&a.length>0){b[a[0].toLowerCase()]=[{typePath:"hierarchicalrequirement",collectionName:"UserStories",parentField:"PortfolioItem"}];for(var c=1;c<a.length;c++)b[a[c].toLowerCase()]=[{typePath:a[c-1],collectionName:"Children",parentField:"Parent"}]}return b}}),Ext.define("Rally.ui.menu.bulk.Cancel",{alias:"widget.rallyrecordmenuitembulkcancel",extend:"Rally.ui.menu.bulk.MenuItem",mixins:{messageable:"Rally.Messageable"},config:{onBeforeAction:function(){},onActionComplete:function(){},text:"Cancel",handler:function(){Ext.create("Rally.ui.dialog.ConfirmDialog",{message:Ext.String.format("Are you sure you would like to cancel {0} work items? All child items that are not marked complete will also be cancelled.",this.records.length),confirmLabel:"Yes, Proceed",cancelLabel:"No",title:"Cancel Artifacts?",listeners:{confirm:function(){this.cancelRecords(this.records,null)},cancel:function(){this.onSuccess([],[],{},"",[])},scope:this}})},predicate:function(a){var b=this.completedStates;return _.every(a,function(a){var c=a.get("_type").toLowerCase(),d=null;d="hierarchicalrequirement"===c?a.get("ScheduleState"):a.get("State")&&a.get("State")._ref;var e=Ext.Array.contains(b,d);return e?!1:/portfolioitem/.test(c)||/hierarchicalrequirement/.test(c)})}},_cancelRecord:function(a){var b=Ext.create("Deft.Deferred"),c=(a.get("FormattedID"),this);this.fireEvent("loadtree"),c.publish("maskUpdate","Retrieving Data...");var d=Ext.create("Rally.technicalservices.ArtifactTree",{portfolioItemTypes:this.portfolioItemTypes,portfolioItemCanceledStates:this.portfolioItemCanceledStates,canceledReleaseHash:this.canceledReleaseHash,canceledScheduleState:this.canceledScheduleState,canceledPrefix:this.canceledPrefix,completedStates:this.completedStates,listeners:{treeloaded:function(a){c.publish("maskUpdate","Cancelling Items..."),a.cancelItems()},completed:function(d){c.publish("maskUpdate"),b.resolve({record:a,batch:d})},error:function(d){c.publish("maskUpdate"),b.resolve({record:a,errorMessage:d})},scope:this}});return d.load(a),b},cancelRecords:function(a){var b=[],c=[],d=[],e=[];_.each(a,function(a){b.push(function(){return this._cancelRecord(a)})},this),Deft.Chain.sequence(b,this).then({success:function(a){var b="";_.each(a,function(a){a.errorMessage?(b=a.errorMessage,d.push(a.record)):(c.push(a.record),a.batch&&a.batch.operations&&a.batch.operations.length>0&&Ext.Array.push(e,a.batch.operations[0].records))}),this.onSuccess(c,d,{},b,e)},failure:function(b){this.onSuccess([],a,{},b,[])},scope:this})},onSuccess:function(a,b,c,d,e){var f=a.length+(1===a.length?" item has ":" items have ");a.length===this.records.length?(f+=" been canceled",this.publish("bulkActionComplete",f,!0,a,e)):(0===a.length&&(f="0 items have been canceled"),0===b.length?this.publish("bulkActionComplete",f+".  Cancellation aborted by user.",[]):this.publish("bulkActionError",f+", but "+b.length+" failed: "+d,[])),Ext.callback(this.onActionComplete,null,[a,b])}}),Ext.define("Rally.ui.menu.bulk.Restore",{alias:"widget.rallyrecordmenuitemrestore",extend:"Rally.ui.menu.item.RecordMenuItem",mixins:{messageable:"Rally.Messageable"},config:{onBeforeAction:function(){},onActionComplete:function(){},text:"Restore",handler:function(){this.restore(this.record)},predicate:function(a){var b=this.record;if("hierarchicalrequirement"===b.get("_type").toLowerCase()){var c=new RegExp(this.cancelledPrefix);if(c.test(b.get("Name")))return!0}if(/portfolioitem/.test(b.get("_type").toLowerCase())){var d=b.get("State")&&b.get("State").Name;if(d===this.canceledPortfolioStateName)return!0}return!1}},restore:function(a){var b=Ext.create("Deft.Deferred");return find={ObjectID:a.get("ObjectID")},"hierarchicalrequirement"===a.get("_type")?(find.Name=a.get("Name"),find["_PreviousValues.Name"]={$exists:!0}):(find.State=this.canceledPortfolioStateName,find["_PreviousValues.State"]={$exists:!0}),this.publish("maskUpdate","Searching History..."),this._fetchLookbackRecords({find:find,fetch:["ObjectID","Name","State","Release","PlanEstimate","ScheduleState","ToDo","Blocked","BlockedReason","_ValidFrom","_PreviousValues"],hydrate:["State","Release"],sort:{_ValidFrom:-1}}).then({success:this._fetchItemsInHierarchy,failure:this._reportError,scope:this}),b},_fetchItemsInHierarchy:function(a){if(a&&a.length>0){var b=a[0].get("_ValidFrom");this._fetchLookbackRecords({find:{_TypeHierarchy:{$in:["HierarchicalRequirement","Task","PortfolioItem"]},_ItemHierarchy:a[0].get("ObjectID"),_ValidFrom:{$gte:b}},fetch:["_TypeHierarchy","ObjectID","Name","State","Release","PlanEstimate","ScheduleState","ToDo","Blocked","BlockedReason","_ValidFrom","_PreviousValues.ScheduleState","_PreviousValues.Name","_PreviousValues.Release","_PreviousValues.State","_PreviousValues.Blocked","_PreviousValues.BlockedReason","_PreviousValues.PlanEstimate","_PreviousValues.Release","_PreviousValues.ToDo"],hydrate:["State","_TypeHierarchy","_PreviousValues.ScheduleState"],sort:{_ValidFrom:-1}}).then({success:function(a){var b={},c={},d={};return 0===a.length?(this.publish("bulkActionComplete"),this.publish("maskUpdate",!1),void this.publish("statusUpdate","No history found.  Try again in a few minutes.")):(Ext.Array.each(a,function(a){var e=a.get("_PreviousValues")||{},f=a.get("ObjectID"),g=a.get("_TypeHierarchy").slice(-1)[0].toLowerCase();console.log("s",a.getData(),g,e,a.get("_ValidFrom")),/portfolioitem/.test(g)&&(a.get("_PreviousValues.State")||null===a.get("_PreviousValues.State"))&&(d[f]={State:a.get("_PreviousValues.State")}),"hierarchicalrequirement"===g&&(a.get("_PreviousValues.Name")&&(c[f]=c[f]||{},c[f].Name=a.get("_PreviousValues.Name")),(a.get("_PreviousValues.Release")||null===a.get("_PreviousValues.Release"))&&(c[f]=c[f]||{},c[f].Release=a.get("_PreviousValues.Release")&&"release/"+a.get("_PreviousValues.Release")||null,console.log("rel",c[f].Release)),(a.get("_PreviousValues.PlanEstimate")||null===a.get("_PreviousValues.PlanEstimate"))&&(c[f]=c[f]||{},c[f].PlanEstimate=a.get("_PreviousValues.PlanEstimate")),a.get("_PreviousValues.ScheduleState")&&(c[f]=c[f]||{},c[f].ScheduleState=a.get("_PreviousValues.ScheduleState")),a.get("_PreviousValues.Blocked")&&(c[f]=c[f]||{},c[f].Blocked=a.get("_PreviousValues.Blocked")),a.get("_PreviousValues.BlockedReason")&&(c[f]=c[f]||{},c[f].BlockedReason=a.get("_PreviousValues.BlockedReason"))),"task"===g&&a.get("_PreviousValues.ToDo")&&(b[f]={ToDo:a.get("_PreviousValues.ToDo")||0})}),void this.updateObjects(d,c,b))},failure:this._reportError,scope:this})}},updateObjects:function(a,b,c){var d=this._getConfig(a,"PortfolioItem"),e=this._getConfig(b,"HierarchicalRequirement"),f=this._getConfig(c,"Task"),g=[];g.push(this._fetchWsapiRecords(d)),g.push(this._fetchWsapiRecords(e)),g.push(this._fetchWsapiRecords(f)),this.publish("maskUpdate","Restoring Objects..."),Deft.Promise.all(g).then({success:function(d){var e=Ext.create("Rally.data.wsapi.batch.Store",{data:_.flatten(d)}),f=[];Ext.Array.each(d[2],function(a){var b=c[a.get("ObjectID")];b&&(f.push(a),Ext.Object.each(b,function(b,c){a.set(b,c)}),a.set("__changedFields",b))}),Ext.Array.each(d[1],function(a){var c=b[a.get("ObjectID")];c&&(f.push(a),Ext.Object.each(c,function(b,c){a.set(b,c)}),a.set("__changedFields",c))}),Ext.Array.each(d[0],function(b){var c=a[b.get("ObjectID")];c&&(f.push(b),Ext.Object.each(c,function(a,c){b.set(a,c)}),b.set("__changedFields",c))}),e.sync({success:function(){var a=Ext.String.format("{0} Records Restored.",f.length);this.publish("bulkActionComplete",a,!0,f,_.flatten(d))},scope:this,failure:this._reportError}).always(function(){this.publish("maskUpdate",!1)},this)},failure:this._reportError,scope:this})},_getConfig:function(a,b){var c=Ext.Array.map(Ext.Object.getKeys(a),function(a,b){return{property:"ObjectID",value:a}});return 0===c.length&&(c=[{property:"ObjectID",value:0}]),c.length>1&&(c=Rally.data.wsapi.Filter.or(c)),{model:b,fetch:["ObjectID"],filters:c}},_reportError:function(a){this.publish("bulkActionError",a)},_fetchWsapiRecords:function(a){var b=Ext.create("Deft.Deferred");return a.limit||(a.limit="Infinity"),a.enablePostGet||(a.enablePostGet=!0),Ext.create("Rally.data.wsapi.Store",a).load({callback:function(a,c){c.wasSuccessful()?b.resolve(a):b.reject(c.error.errors.join(","))}}),b.promise},_fetchLookbackRecords:function(a){var b=Ext.create("Deft.Deferred");return a.limit||(a.limit="Infinity"),a.removeUnauthorizedSnapshots=!0,Ext.create("Rally.data.lookback.SnapshotStore",a).load({callback:function(a,c){c.wasSuccessful()?b.resolve(a):b.reject(c.error.errors.join(","))}}),b.promise}}),Ext.define("catsFeatureCancellation",{extend:"Rally.app.App",componentCls:"app",logger:new Rally.technicalservices.Logger,defaults:{margin:10},items:[{xtype:"container",itemId:"display_box"}],integrationHeaders:{name:"catsFeatureCancellation"},config:{defaultSettings:{rootModelTypePath:"PortfolioItem/Feature",canceledScheduleState:"Defined",canceledReleaseName:"Cancelled",canceledPortfolioStateName:"Cancelled",canceledPrefix:"[CANCELLED] ",defaultColumns:"FormattedID,Name",completedStoryStates:"Accepted"}},launch:function(){Deft.Promise.all([Rally.technicalservices.Toolbox.fetchPortfolioItemStateRefs(this.getCanceledPortfolioStateName()),Rally.technicalservices.Toolbox.fetchPortfolioItemTypes(),Rally.technicalservices.Toolbox.fetchReleases(this.getCanceledReleaseName()),Rally.technicalservices.Toolbox.fetchCompletedScheduleStates()]).then({success:this.initializeApp,failure:this.showErrorNotification,scope:this}),this.subscribe(this,"statusUpdate",this.statusUpdate,this),this.subscribe(this,"maskUpdate",this.maskUpdate,this),this.subscribe(this,"bulkActionComplete",this.statusUpdate,this),this.subscribe(this,"bulkActionError",this.showErrorNotification,this)},getCanceledReleaseName:function(){return this.getSetting("canceledReleaseName")},getCanceledPortfolioStateName:function(){return this.getSetting("canceledPortfolioStateName")},getCanceledScheduleState:function(){return this.getSetting("canceledScheduleState")},getCanceledPrefix:function(){return this.getSetting("canceledPrefix")},getCompletedStates:function(){this.logger.log("getCompletedStates",this.getSetting("completedStates"));var a=this.getSetting("completedStates");return Ext.isEmpty(a)?this.getCompletedStoryStates():Ext.isArray(a)?a:a.split(",").concat(this.getCompletedStoryStates())},getCompletedStoryStates:function(){this.logger.log("getCompletedStoryStates",this.getSetting("completedStoryStates"));var a=this.getSetting("completedStoryStates");return Ext.isEmpty(a)?[]:Ext.isArray(a)?a:a.split(",")},maskUpdate:function(a){a&&""!==a||(a=!1),this.setLoading(a),this.refresh()},initializeApp:function(a){return this.portfolioItemCanceledStates=a[0],this.portfolioItemTypePaths=a[1],this.canceledReleaseHash=a[2],this.completedStates=a[3].concat(this.getCompletedStates()),this.down("#display_box").removeAll(),this.logger.log("initializeApp",a[0],a[1],a[2],this.completedStates),Ext.Array.contains(this.portfolioItemTypePaths,this.getRootModelTypePath())?void this.buildTreeStore():void this.down("#display_box").add({xtype:"container",html:"Please configure an Artifact Type in the App Settings."})},buildTreeStore:function(){this.down("#display_box").removeAll(),Ext.create("Rally.data.wsapi.TreeStoreBuilder").build({models:[this.getRootModelTypePath()],enableHierarchy:!0,autoLoad:!1}).then({success:this.buildGridboard,scope:this})},getDefaultColumns:function(){var a=["FormattedID","Name"];if(this.getSetting("defaultColumns")){var b=this.getSetting("defaultColumns");return Ext.isString(this.getSetting("defaultColumns"))&&(b=b.split(",")),Ext.Array.merge(a,b)}return a},buildGridboard:function(a){this.down("rallygridboard")&&this.down("rallygridboard").destroy();var b=this.getTypesToCancel(),c=this.getCanceledPrefix(),d=this.getCanceledPortfolioStateName();this.logger.log("buildGridboard",this.getDefaultColumns()),this.add({xtype:"rallygridboard",context:this.getContext(),modelNames:this.getRootModelTypePath(),toggleState:"grid",gridConfig:{store:a,storeConfig:{pageSize:200},columnCfgs:this.getDefaultColumns(),bulkEditConfig:{items:[{xtype:"rallyrecordmenuitembulkcancel",portfolioItemTypes:this.getPortfolioItemTypePaths(),canceledPortfolioStateName:d,canceledReleaseHash:this.canceledReleaseHash,canceledScheduleState:this.getCanceledScheduleState(),canceledPrefix:this.getCanceledPrefix(),completedStates:this.completedStates,portfolioItemCanceledStates:this.portfolioItemCanceledStates,types:b}]},rowActionColumnConfig:{rowActionsFn:function(a){return console.log("rowactionsfn",a),[{xtype:"rallyrecordmenuitemrestore",record:a,cancelledPrefix:c,canceledPortfolioStateName:d}]}}},plugins:this.getPlugins(),height:this.getHeight(),listeners:{viewchange:function(a){this.buildTreeStore()},scope:this}})},getPlugins:function(){return[{ptype:"rallygridboardfieldpicker",headerPosition:"left",modelNames:this.getTypesToCancel(),stateful:!0,stateId:this.getContext().getScopedStateId("deep-copy-columns")},{ptype:"rallygridboardinlinefiltercontrol",inlineFilterButtonConfig:{stateful:!0,stateId:this.getContext().getScopedStateId("deep-copy-filter"),modelNames:[this.getRootModelTypePath()],inlineFilterPanelConfig:{collapsed:!1,quickFilterPanelConfig:{defaultFields:["Owner"]}}}},{ptype:"rallygridboardsharedviewcontrol",stateful:!0,stateId:this.getContext().getScopedStateId("cancel-view"),stateEvents:["select","beforedestroy"]}]},_updateRecordInGrid:function(a,b){var c=b.get("ObjectID"),d=a.findAllRecordsWithId(c);if(Ext.isEmpty(d))return void this.logger.log(b.get("FormattedID"),"item not displaying in grid right now");var e=b.get("__changedFields")||[];Ext.Array.each(d,function(a){Ext.isArray(e)&&Ext.Array.each(e,function(c){a.set(c,b.get(c))}),Ext.isObject(e)&&Ext.Object.each(e,function(b,c){a.set(b,c)})})},statusUpdate:function(a,b,c,d){Rally.ui.notify.Notifier.hide(),Rally.ui.notify.Notifier.show({message:a,showForever:!0}),this.logger.log("statusUpdate",b,a,d);var e=this.down("rallygridboard").getGridOrBoard().getStore();Ext.Array.each(d,function(a){this._updateRecordInGrid(e,a)},this),this.down("rallygridboard").getGridOrBoard().getView().refresh()},getTypesToCancel:function(){var a=[],b=this.getRootModelTypePath();return/PortfolioItem\//.test(b)&&Ext.Array.each(this.getPortfolioItemTypePaths(),function(c){return a.unshift(c),c!==b}),a},getPortfolioItemTypePaths:function(){return this.portfolioItemTypePaths},getRootModelTypePath:function(){return this.getSetting("rootModelTypePath")},showErrorNotification:function(a){this.setLoading(!1),Rally.ui.notify.Notifier.showError({message:a})},getSettingsFields:function(){var a=[{property:"TypePath",operator:"contains",value:"PortfolioItem/"}],b=this.getSettings();return[{xtype:"rallycombobox",name:"rootModelTypePath",storeConfig:{model:"TypeDefinition",fetch:["TypePath","DisplayName"],filters:a,remoteFilter:!0},displayField:"DisplayName",valueField:"TypePath",fieldLabel:"Artifact Type",labelAlign:"right",labelWidth:200,width:400},{xtype:"rallyreleasecombobox",name:"canceledReleaseName",fieldLabel:"Canceled Release Name",valueField:"Name",displayField:"Name",showArrows:!1,labelAlign:"right",labelWidth:200,width:400},{xtype:"rallyfieldvaluecombobox",name:"canceledScheduleState",fieldLabel:"Canceled Schedule State",labelAlign:"right",model:"HierarchicalRequirement",field:"ScheduleState",labelWidth:200,width:400,listeners:{ready:function(a){a.setValue(b.canceledScheduleState),a.getStore().on("load",function(){a.setValue(b.canceledScheduleState)},{single:!0})}}},{xtype:"rallycombobox",name:"completedStates",fieldLabel:"Completed Portfolio States",labelAlign:"right",storeConfig:{model:"State",fetch:["Name","TypeDef","TypePath"],remoteFilter:!0,filters:[{property:"TypeDef",operator:"!=",value:""},{property:"Enabled",value:!0}],sorters:[{property:"Name",direction:"ASC"}]},displayField:"Name",valueField:"_ref",multiSelect:!0,labelWidth:200,width:400,listConfig:{cls:"rally-checkbox-boundlist",itemTpl:Ext.create("Ext.XTemplate",'<div class="rally-checkbox-image"></div>','<div class="rally-checkbox-text">{Name:htmlEncode} (<span style="font-family:NotoSansBold, Helvetica, Arial">{[values && values.TypeDef && values.TypeDef.Name]}</span>)</div>')},listeners:{ready:function(a){a.getStore()&&a.getStore().getRange()&&a.getStore().getRange().length>0&&Ext.Array.each(a.getStore().getRange(),function(b){b.getData()&&b.getData().TypeDef&&b.getData().TypeDef.Name||a.getStore().remove(b)}),a.setValue(b.completedStates.split(",")),a.getStore().on("load",function(c){Ext.Array.each(a.getStore().getRange(),function(b){b.getData()&&b.getData().TypeDef&&b.getData().TypeDef.Name||a.getStore().remove(b)}),a.setValue(b.completedStates.split(","))},{single:!0})}}},{xtype:"rallyfieldvaluecombobox",name:"completedStoryStates",fieldLabel:"Completed User Story States",labelAlign:"right",model:"HierarchicalRequirement",field:"ScheduleState",multiSelect:!0,labelWidth:200,width:400,listeners:{ready:function(a){b.completedStoryStates&&(a.setValue(b.completedStoryStates.split(",")),a.getStore().on("load",function(c){a.setValue(b.completedStoryStates.split(","))},{single:!0}))}}},{xtype:"rallyfieldcombobox",name:"defaultColumns",fieldLabel:"Default Columns",labelAlign:"right",model:"PortfolioItem",multiSelect:!0,labelWidth:200,width:400,listeners:{ready:function(a){var c=b&&b.defaultColumns&&b.defaultColumns.split(",")||[];c=Ext.Array.merge(["FormattedID","Name"],c),a.setValue(c),a.getStore().on("load",function(b){a.setValue(c)},{single:!0})}}}]},getOptions:function(){return[{text:"About...",handler:this._launchInfo,scope:this}]},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{})},isExternal:function(){return"undefined"==typeof this.getAppId()}});
            
               Rally.launchApp('catsFeatureCancellation', {
                   name: 'Feature Cancellation App'
               });
        });
    </script>
    
    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}
    </style>

</head>
<body></body>
</html>